import React, { Component } from 'react';
import { connect } from 'react-redux';
import { bindActionCreators } from 'redux';
import { toggleIrrigationVisibility, setFilterIrrigation } from '../../redux/actions/actions';
import Select from 'react-select';
import sortAlphaNum from '../../utils/sortAlphaNum';

class IrrigationFilter extends Component {
    constructor(props) {
        super(props);
        this.onIrrigationClick = this.onIrrigationClick.bind(this);
        this.onSelectChange = this.onSelectChange.bind(this);
    }

    onIrrigationClick() {
        this.props.actions.toggleIrrigationVisibility();
    }

    onSelectChange(selectedValueList) {
        this.props.actions.setFilterIrrigation(_.map(selectedValueList, (d) => d.label));
    }

    render() {
        const { filterMesh, schematicData = { lines: [], artifacts: [], labels: [], markers: [] } } = this.props,
            { areIrrigationsVisible = false, visibleIrrigations = [] } = filterMesh;

        // filter out all demands , then get the name of the demand and finally sort 
        const irrigationsList = _.map(_.filter(schematicData.markers,
            (d) => { return (d.type == 'agri') }),
            (d) => d.name)
            .sort(sortAlphaNum);

        // Merge the option Array text with the count of records present in each type
        const modifiedOptionArray = _.map(irrigationsList, (option) => ({ label: option, value: option }));


        return (
            <div className='filter-container'>

                <div className='inner-filter-box'>
                    {/* Allowing the user to select specific irrigations */}
                    <div className='select-container-filter'>
                        <Select
                            isClearable={true}
                            placeholder='Select Irrigations...'
                            name={'irrigation-select'}
                            isMulti
                            isDisabled={!areIrrigationsVisible}
                            // react select needs a value and so we need to set it in a complicated way with a function
                            //  need to find a more elegant solution in future
                            value={_.map(visibleIrrigations, (name) => ({ label: name, value: name }))}
                            options={modifiedOptionArray}
                            styles={{ option: (styles) => ({ ...styles, color: 'black', textAlign: 'left' }) }}
                            onChange={this.onSelectChange} />
                    </div>
                    {/* Adding a button to toggle all demands */}
                    <button
                        className={"noSelect custom-icon-button agri " + ('icon btn ') + (areIrrigationsVisible ? '' : 'outline')}
                        onClick={this.onIrrigationClick}>
                        <svg transform="translate(-3,5)" width="25" height="25"  >
                            <g>
                                <path id="marker-image"
                                    transform="translate(0, 0) scale(0.050)"
                                    d={
                                        areIrrigationsVisible ? "m512 54.1875v-29.941406c-16.90625 0-32.179688 7.097656-43.023438 18.457031l-6.578124-15.863281c-3.707032-8.945313-12.363282-14.726563-22.046876-14.726563-9.683593 0-18.335937 5.78125-22.046874 14.726563l-6.621094 15.96875c-10.847656-11.421875-26.164063-18.5625-43.125-18.5625v29.941406c16.304687 0 29.570312 13.265625 29.570312 29.570312v.5h.039063c.078125 8.078126 2.464843 16.082032 7.097656 23.023438 4.957031 7.421875 12.023437 12.945312 20.113281 16.011719v41.917969l-19.296875-22.066407-33.511719 30.597657 20.191407 22.113281 10.917969-9.96875 21.703124 24.816406v32.75l-19.296874-22.066406-33.511719 30.59375 20.191406 22.113281 10.917969-9.964844 21.699218 24.8125v24.25c-51.421874-6.140625-103.070312-9.523437-154.371093-10.082031v-26.28125l21.699219-24.816406 10.917968 9.96875 20.191406-22.113281-33.511718-30.597657-19.296875 22.066407v-32.75l21.699219-24.816407 10.917968 9.96875 20.191406-22.113281-33.511718-30.597656-19.296875 22.070312v-41.917968c8.09375-3.070313 15.160156-8.59375 20.117187-16.015626 5.082032-7.613281 7.464844-16.507812 7.054688-25.378906.960937-15.441406 13.824218-27.710937 29.503906-27.710937v-29.945313c-16.90625 0-32.179688 7.097656-43.023438 18.457032l-6.582031-15.859376c-3.707031-8.945312-12.363281-14.726562-22.046875-14.726562s-18.335937 5.78125-22.046875 14.726562l-6.621093 15.96875c-10.847657-11.421874-26.164063-18.566406-43.125-18.566406v29.945313c16.304687 0 29.570312 13.265625 29.570312 29.570312v.496094h.039062c.074219 8.082031 2.460938 16.085937 7.097657 23.027344 4.957031 7.421875 12.023437 12.945312 20.113281 16.011719v41.917968l-19.296875-22.066406-33.511719 30.597656 20.191406 22.113282 10.917969-9.96875 21.699219 24.816406v32.75l-19.292969-22.070313-33.511719 30.597657 20.1875 22.113281 10.917969-9.964844 21.699219 24.8125v26.28125c-51.179688.542969-102.800781 3.890625-154.296875 9.988281v-24.152344l21.699219-24.816406 10.917968 9.96875 20.191407-22.113281-33.511719-30.597656-19.296875 22.070312v-32.753906l21.699219-24.8125 10.917968 9.964844 20.191407-22.113281-33.507813-30.597657-19.296875 22.070313v-41.917969c8.089844-3.066406 15.15625-8.59375 20.113281-16.015625 5.085938-7.613281 7.46875-16.511719 7.054688-25.378906.964844-15.441406 13.824219-27.710938 29.503906-27.710938v-29.945312c-16.90625 0-32.179687 7.101562-43.023437 18.460937l-6.574219-15.863281c-3.710938-8.949219-12.363281-14.730469-22.050781-14.730469-9.683594 0-18.335938 5.78125-22.046875 14.726563l-6.621094 15.96875c-10.851562-11.417969-26.164062-18.5625-43.125-18.5625v29.941406c16.304688 0 29.570312 13.265625 29.570312 29.570312v.5h.039063c.078125 8.078126 2.460937 16.082032 7.097656 23.023438 4.957031 7.421875 12.023438 12.945312 20.113281 16.015625v41.917969l-19.296874-22.070313-33.511719 30.597657 20.191406 22.113281 10.917969-9.96875 21.703125 24.816406v32.75l-19.300781-22.066406-33.511719 30.597656 20.191406 22.113281 10.917969-9.96875 21.703125 24.816406v28.007813c-14.816407 2.0625-29.609375 4.347656-44.367188 6.863281l-12.45312475 2.125v90.394532h510.98828175v-90.382813l-12.441407-2.132813c-14.371093-2.46875-28.785156-4.707031-43.226562-6.738281v-28.136719l21.699219-24.816406 10.917968 9.96875 20.191406-22.113281-33.511718-30.597656-19.292969 22.066406v-32.75l21.699219-24.8125 10.917968 9.964844 20.191407-22.113281-33.511719-30.597657-19.300781 22.070313v-41.917969c8.09375-3.070313 15.15625-8.59375 20.117187-16.015625 5.082032-7.613281 7.464844-16.507812 7.050782-25.378906.964843-15.441406 13.828124-27.714844 29.507812-27.714844zm0 0"
                                            : "m512 54.1875v-29.941406c-16.90625 0-32.179688 7.097656-43.023438 18.457031l-6.578124-15.863281c-3.707032-8.945313-12.363282-14.726563-22.046876-14.726563-9.683593 0-18.335937 5.78125-22.046874 14.726563l-6.621094 15.96875c-10.847656-11.421875-26.164063-18.5625-43.125-18.5625v29.941406c16.304687 0 29.570312 13.265625 29.570312 29.570312v.5h.039063c.078125 8.078126 2.464843 16.082032 7.097656 23.023438 4.957031 7.421875 12.023437 12.945312 20.113281 16.011719v41.917969l-19.296875-22.066407-33.511719 30.597657 20.191407 22.113281 10.917969-9.96875 21.703124 24.816406v32.75l-19.296874-22.066406-33.511719 30.59375 20.191406 22.113281 10.917969-9.964844 21.699218 24.8125v24.25c-51.421874-6.140625-103.070312-9.523437-154.371093-10.082031v-26.28125l21.699219-24.816406 10.917968 9.96875 20.191406-22.113281-33.511718-30.597657-19.296875 22.066407v-32.75l21.699219-24.816407 10.917968 9.96875 20.191406-22.113281-33.511718-30.597656-19.296875 22.070312v-41.917968c8.09375-3.070313 15.160156-8.59375 20.117187-16.015626 5.082032-7.613281 7.464844-16.507812 7.054688-25.378906.960937-15.441406 13.824218-27.710937 29.503906-27.710937v-29.945313c-16.90625 0-32.179688 7.097656-43.023438 18.457032l-6.582031-15.859376c-3.707031-8.945312-12.363281-14.726562-22.046875-14.726562s-18.335937 5.78125-22.046875 14.726562l-6.621093 15.96875c-10.847657-11.421874-26.164063-18.566406-43.125-18.566406v29.945313c16.304687 0 29.570312 13.265625 29.570312 29.570312v.496094h.039062c.074219 8.082031 2.460938 16.085937 7.097657 23.027344 4.957031 7.421875 12.023437 12.945312 20.113281 16.011719v41.917968l-19.296875-22.066406-33.511719 30.597656 20.191406 22.113282 10.917969-9.96875 21.699219 24.816406v32.75l-19.292969-22.070313-33.511719 30.597657 20.1875 22.113281 10.917969-9.964844 21.699219 24.8125v26.28125c-51.179688.542969-102.800781 3.890625-154.296875 9.988281v-24.152344l21.699219-24.816406 10.917968 9.96875 20.191407-22.113281-33.511719-30.597656-19.296875 22.070312v-32.753906l21.699219-24.8125 10.917968 9.964844 20.191407-22.113281-33.507813-30.597657-19.296875 22.070313v-41.917969c8.089844-3.066406 15.15625-8.59375 20.113281-16.015625 5.085938-7.613281 7.46875-16.511719 7.054688-25.378906.964844-15.441406 13.824219-27.710938 29.503906-27.710938v-29.945312c-16.90625 0-32.179687 7.101562-43.023437 18.460937l-6.574219-15.863281c-3.710938-8.949219-12.363281-14.730469-22.050781-14.730469-9.683594 0-18.335938 5.78125-22.046875 14.726563l-6.621094 15.96875c-10.851562-11.417969-26.164062-18.5625-43.125-18.5625v29.941406c16.304688 0 29.570312 13.265625 29.570312 29.570312v.5h.039063c.078125 8.078126 2.460937 16.082032 7.097656 23.023438 4.957031 7.421875 12.023438 12.945312 20.113281 16.015625v41.917969l-19.296874-22.070313-33.511719 30.597657 20.191406 22.113281 10.917969-9.96875 21.703125 24.816406v32.75l-19.300781-22.066406-33.511719 30.597656 20.191406 22.113281 10.917969-9.96875 21.703125 24.816406v28.007813c-14.816407 2.0625-29.609375 4.347656-44.367188 6.863281l-12.45312475 2.125v90.394532h510.98828175v-90.382813l-12.441407-2.132813c-14.371093-2.46875-28.785156-4.707031-43.226562-6.738281v-28.136719l21.699219-24.816406 10.917968 9.96875 20.191406-22.113281-33.511718-30.597656-19.292969 22.066406v-32.75l21.699219-24.8125 10.917968 9.964844 20.191407-22.113281-33.511719-30.597657-19.300781 22.070313v-41.917969c8.09375-3.070313 15.15625-8.59375 20.117187-16.015625 5.082032-7.613281 7.464844-16.507812 7.050782-25.378906.964843-15.441406 13.828124-27.714844 29.507812-27.714844zm-451.523438 24.964844 11.316407-27.300782 11.316406 27.300782c.457031 1.097656.722656 2.152344.855469 3.148437-.015625.488281-.039063.96875-.039063 1.457031v.5h.132813c-.109375 3.007813-1.355469 5.304688-2.078125 6.390626-1.09375 1.636718-4.277344 5.445312-10.1875 5.445312-5.910157 0-9.09375-3.808594-10.1875-5.445312-1.09375-1.640626-3.394531-6.035157-1.128907-11.496094zm184.242188-12.117188 11.316406-27.296875 11.316406 27.296875c.457032 1.101563.722657 2.15625.855469 3.152344-.011719.488281-.039062.96875-.039062 1.457031v.496094h.132812c-.109375 3.011719-1.355469 5.308594-2.078125 6.394531-1.09375 1.636719-4.277344 5.445313-10.1875 5.445313s-9.09375-3.808594-10.1875-5.449219c-1.09375-1.636719-3.390625-6.035156-1.128906-11.496094zm236.328125 319.359375h-451.101563v-35.128906c75.15625-12.140625 151.089844-18.289063 225.910157-18.289063 74.800781 0 150.492187 6.144532 225.191406 18.277344zm-52.011719-307.242187 11.316406-27.300782 11.320313 27.300782c.457031 1.097656.71875 2.152344.851563 3.152344-.011719.484374-.035157.964843-.035157 1.453124v.5h.128907c-.109376 3.007813-1.351563 5.304688-2.074219 6.390626-1.097657 1.636718-4.277344 5.445312-10.191407 5.445312-5.910156 0-9.089843-3.808594-10.1875-5.445312-1.09375-1.636719-3.394531-6.035157-1.128906-11.496094zm0 0"

                                    }
                                />
                            </g>
                        </svg>
                    </button>
                </div>
            </div>
        )
    }
}

function mapStateToProps(state) {
    return {
        filterMesh: state.delta.filterMesh
    };
}

function mapDispatchToProps(dispatch) {
    return {
        actions: bindActionCreators({ toggleIrrigationVisibility, setFilterIrrigation }, dispatch) // *ADDED
    };
}

export default connect(mapStateToProps, mapDispatchToProps)(IrrigationFilter);